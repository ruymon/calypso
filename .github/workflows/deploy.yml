name: Deploy to PROD

permissions:
  contents: write
  id-token: write
  repository-projects: write

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  release:
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install dependencies
        run: |
          npm i -g @semantic-release/changelog @semantic-release/git semantic-release
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: semantic-release
  build:
    runs-on: ubuntu-latest

    needs: release

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - uses: actions/checkout@v4

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v2

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Docker image
        env:
          NEXT_PUBLIC_NODE_ENV: ${{ secrets.NEXT_PUBLIC_NODE_ENV }}
          NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN }}
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}

        run: |
          echo $GOOGLE_CREDENTIALS > key.json
          gcloud auth activate-service-account --key-file key.json
          gcloud auth configure-docker us-east4-docker.pkg.dev
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $LATEST_TAG
          docker build \
          -t skyscopeweb:$LATEST_TAG \
          --build-arg NEXT_PUBLIC_NODE_ENV=${NEXT_PUBLIC_NODE_ENV} \
          --build-arg NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN=${NEXT_PUBLIC_MAPBOX_ACCESS_TOKEN} \
          --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${NEXT_PUBLIC_FIREBASE_API_KEY} \
          --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN} \
          --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${NEXT_PUBLIC_FIREBASE_PROJECT_ID} \
          --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET} \
          --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID} \
          --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${NEXT_PUBLIC_FIREBASE_APP_ID} \
          --build-arg NEXT_PUBLIC_BASE_URL=${NEXT_PUBLIC_BASE_URL} .
          docker tag skyscopeweb:$LATEST_TAG us-east4-docker.pkg.dev/skyscopeapp/container-registry/skyscopeweb:$LATEST_TAG
          docker tag skyscopeweb:$LATEST_TAG us-east4-docker.pkg.dev/skyscopeapp/container-registry/skyscopeweb:latest
          docker push us-east4-docker.pkg.dev/skyscopeapp/container-registry/skyscopeweb --all-tags
          gcloud run services update main-skyscope-web --image=us-east4-docker.pkg.dev/skyscopeapp/container-registry/skyscopeweb:$LATEST_TAG --region=us-east4 --project=skyscopeapp
